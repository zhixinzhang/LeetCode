
package DataStructure.Tree;


// https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/discuss/942181/Recursive-Solution-or-Java
//

public Node connect(Node root) {
    if (root == null) return root;

    Node left = root.left;
    Node right = root.right;
    Node nextChild = nextChild(root.next);

    if (left != null) {
    if (right != null) left.next = right;
    else left.next = nextChild;
    }

    if (right != null) right.next = nextChild;

    // connect from right to left
    connect(right);
    connect(left);

    return root;
    }

private Node nextChild(Node node) {
    if (node == null) return node;
    if (node.left != null) return node.left;
    if (node.right != null) return node.right;

    return nextChild(node.next);
    }